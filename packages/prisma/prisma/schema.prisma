// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // output   = "../../../node_modules/.prisma/client"
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  avatarUrl String?
  createdAt DateTime @default(now())

  hostedLobbies Lobby[]       @relation("UserHost")
}

model Guest {
  id          String   @id @default(uuid())
  displayName String?
  avatar      String? // optional emoji or URL
  createdAt   DateTime @default(now())

  hostedLobbies Lobby[]       @relation("GuestHost")
}

// ------------------------------------------------------------------

model Lobby {
  id              String  @id @default(uuid())
  name String
  maxPlayers Int
  lobbyIdentifier String  @unique
  code            String  @unique
  private         Boolean @default(false)
  pin             String? // optional PIN for private lobbies

  // New fields for explicit foreign keys
  hostUserId  String?
  hostGuestId String?

  // Relations: One must be set based on the host type
  hostUser  User?  @relation("UserHost", fields: [hostUserId], references: [id])
  hostGuest Guest? @relation("GuestHost", fields: [hostGuestId], references: [id])

  // Removed hostId and hostType as they are no longer necessary for the relations
  leaderboardId String? // optional future link
  activeGameId  String? // optional current game reference

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Added index for performance
  @@index([hostUserId])
  @@index([hostGuestId])
}